   1              		.cpu arm7tdmi-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"main_blink.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.startup,"ax",%progbits
  17              		.align	2
  18              		.global	main
  20              	main:
  21              	.LFB0:
  22              		.file 1 "main_blink.c"
   1:main_blink.c  **** #include <stdint.h>
   2:main_blink.c  **** #include "hardware.h"
   3:main_blink.c  **** #include "registers.h"
   4:main_blink.c  **** 
   5:main_blink.c  **** int main(void)
   6:main_blink.c  **** {
  23              		.loc 1 6 0
  24              		.cfi_startproc
  25              		@ Function supports interworking.
  26              		@ Volatile: function does not return.
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 08402DE9 		stmfd	sp!, {r3, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 3, -8
  33              		.cfi_offset 14, -4
   7:main_blink.c  ****   int8_t i;
   8:main_blink.c  **** 
   9:main_blink.c  ****   hardware_init();
  34              		.loc 1 9 0
  35 0004 FEFFFFEB 		bl	hardware_init
  36              	.LVL0:
  10:main_blink.c  ****   reg32_table[REG32_LED] = LED_MANUAL;  // manual LED control
  37              		.loc 1 10 0
  38 0008 38309FE5 		ldr	r3, .L3
  39 000c FF24A0E3 		mov	r2, #-16777216
  40 0010 002083E5 		str	r2, [r3, #0]
  41              	.L2:
  11:main_blink.c  **** 
  12:main_blink.c  ****   while (1) {
  13:main_blink.c  ****     pause(HALF_SEC);
  42              		.loc 1 13 0 discriminator 1
  43 0014 30009FE5 		ldr	r0, .L3+4
  44 0018 FEFFFFEB 		bl	pause
  45              	.LVL1:
  14:main_blink.c  ****     set_rgb(0, 255, 0); // turn on greenlight
  46              		.loc 1 14 0 discriminator 1
  47 001c 0000A0E3 		mov	r0, #0
  48 0020 0020A0E1 		mov	r2, r0
  49 0024 FF10A0E3 		mov	r1, #255
  50 0028 FEFFFFEB 		bl	set_rgb
  51              	.LVL2:
  15:main_blink.c  ****     pause(HALF_SEC);
  52              		.loc 1 15 0 discriminator 1
  53 002c 18009FE5 		ldr	r0, .L3+4
  54 0030 FEFFFFEB 		bl	pause
  55              	.LVL3:
  16:main_blink.c  ****     set_rgb(0, 0, 0); // turn off greenlight
  56              		.loc 1 16 0 discriminator 1
  57 0034 0000A0E3 		mov	r0, #0
  58 0038 0010A0E1 		mov	r1, r0
  59 003c 0020A0E1 		mov	r2, r0
  60 0040 FEFFFFEB 		bl	set_rgb
  61              	.LVL4:
  62 0044 F2FFFFEA 		b	.L2
  63              	.L4:
  64              		.align	2
  65              	.L3:
  66 0048 00000000 		.word	reg32_table
  67 004c 404B4C00 		.word	5000000
  68              		.cfi_endproc
  69              	.LFE0:
  71              		.text
  72              	.Letext0:
  73              		.file 2 "c:/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
  74              		.file 3 "../../common/regdefs.h"
  75              		.file 4 "../firmware/registers.h"
  76              		.file 5 "../firmware/hardware.h"
  77              		.file 6 "../firmware/sysTime.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main_blink.c
C:\Users\ncmorand\AppData\Local\Temp\ccrD08mk.s:17     .text.startup:00000000 $a
C:\Users\ncmorand\AppData\Local\Temp\ccrD08mk.s:20     .text.startup:00000000 main
C:\Users\ncmorand\AppData\Local\Temp\ccrD08mk.s:66     .text.startup:00000048 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
hardware_init
pause
set_rgb
reg32_table
