   1              		.cpu arm7tdmi-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"adc.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.align	2
  17              		.global	adc_init
  19              	adc_init:
  20              	.LFB0:
  21              		.file 1 "../firmware/adc.c"
   1:../firmware/adc.c **** #include "adc.h"
   2:../firmware/adc.c **** #include "LPC21xx.h"
   3:../firmware/adc.c **** #include "lpcADC.h"
   4:../firmware/adc.c **** #include "uart.h"
   5:../firmware/adc.c **** #include "timerISR.h"
   6:../firmware/adc.c **** #include "sysTime.h"
   7:../firmware/adc.c **** 
   8:../firmware/adc.c **** void adc_init()
   9:../firmware/adc.c **** {
  22              		.loc 1 9 0
  23              		.cfi_startproc
  24              		@ Function supports interworking.
  25              		@ args = 0, pretend = 0, frame = 0
  26              		@ frame_needed = 0, uses_anonymous_args = 0
  27              		@ link register save eliminated.
  10:../firmware/adc.c ****   PINSEL1 &= ~(0xFF << 22);    // Set AN0...AN3 as analog inputs
  28              		.loc 1 10 0
  29 0000 24309FE5 		ldr	r3, .L2
  30 0004 042093E5 		ldr	r2, [r3, #4]
  31 0008 FF25C2E3 		bic	r2, r2, #1069547520
  32 000c 042083E5 		str	r2, [r3, #4]
  11:../firmware/adc.c ****   PINSEL1 |= (0x55 << 22);
  33              		.loc 1 11 0
  34 0010 042093E5 		ldr	r2, [r3, #4]
  35 0014 552582E3 		orr	r2, r2, #356515840
  36 0018 042083E5 		str	r2, [r3, #4]
  12:../firmware/adc.c ****   // clock = (30 / (6+1)) = 4.29 MHz, A/D enabled, pin Ain0
  13:../firmware/adc.c ****   ADCR = (6 << 8) | (1 << 21) | (1 << 0);
  37              		.loc 1 13 0
  38 001c 0C209FE5 		ldr	r2, .L2+4
  39 0020 023983E2 		add	r3, r3, #32768
  40 0024 002083E5 		str	r2, [r3, #0]
  41 0028 1EFF2FE1 		bx	lr
  42              	.L3:
  43              		.align	2
  44              	.L2:
  45 002c 00C002E0 		.word	-536690688
  46 0030 01062000 		.word	2098689
  47              		.cfi_endproc
  48              	.LFE0:
  50              		.align	2
  51              		.global	adc_set_channel
  53              	adc_set_channel:
  54              	.LFB1:
  14:../firmware/adc.c **** }
  15:../firmware/adc.c **** 
  16:../firmware/adc.c **** void adc_set_channel(uint8_t ch)
  17:../firmware/adc.c **** {
  55              		.loc 1 17 0
  56              		.cfi_startproc
  57              		@ Function supports interworking.
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.LVL0:
  18:../firmware/adc.c ****   if (ch>3) {
  19:../firmware/adc.c ****     ch = 0;
  20:../firmware/adc.c ****   }
  21:../firmware/adc.c ****   ADCR = (ADCR & 0xFFFFFF00) | (1 << ch);
  62              		.loc 1 21 0
  63 0034 1C309FE5 		ldr	r3, .L7
  64 0038 002093E5 		ldr	r2, [r3, #0]
  19:../firmware/adc.c ****     ch = 0;
  65              		.loc 1 19 0
  66 003c 030050E3 		cmp	r0, #3
  67 0040 0000A083 		movhi	r0, #0
  68              	.LVL1:
  69              		.loc 1 21 0
  70 0044 FF20C2E3 		bic	r2, r2, #255
  71 0048 0110A0E3 		mov	r1, #1
  72 004c 110082E1 		orr	r0, r2, r1, asl r0
  73              	.LVL2:
  74 0050 000083E5 		str	r0, [r3, #0]
  75 0054 1EFF2FE1 		bx	lr
  76              	.L8:
  77              		.align	2
  78              	.L7:
  79 0058 004003E0 		.word	-536657920
  80              		.cfi_endproc
  81              	.LFE1:
  83              		.align	2
  84              		.global	adc_read
  86              	adc_read:
  87              	.LFB2:
  22:../firmware/adc.c **** }
  23:../firmware/adc.c **** 
  24:../firmware/adc.c **** uint16_t adc_read()
  25:../firmware/adc.c **** {
  88              		.loc 1 25 0
  89              		.cfi_startproc
  90              		@ Function supports interworking.
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  26:../firmware/adc.c ****   ADCR |= (1 << 24);               // start now
  94              		.loc 1 26 0
  95 005c 38309FE5 		ldr	r3, .L12
  96 0060 002093E5 		ldr	r2, [r3, #0]
  97 0064 012482E3 		orr	r2, r2, #16777216
  98 0068 002083E5 		str	r2, [r3, #0]
  99 006c 0310A0E1 		mov	r1, r3
 100              	.L10:
  27:../firmware/adc.c ****   while (!(ADDR & 0x80000000));    // wait for conversion
 101              		.loc 1 27 0 discriminator 1
 102 0070 042091E5 		ldr	r2, [r1, #4]
 103 0074 000052E3 		cmp	r2, #0
 104 0078 1C309FE5 		ldr	r3, .L12
 105 007c FBFFFFAA 		bge	.L10
  28:../firmware/adc.c ****   ADCR &= ~(1 << 24);              // stop conversion (important!)
 106              		.loc 1 28 0
 107 0080 002093E5 		ldr	r2, [r3, #0]
 108 0084 0124C2E3 		bic	r2, r2, #16777216
 109 0088 002083E5 		str	r2, [r3, #0]
  29:../firmware/adc.c ****   return (ADDR & 0x0000FFFF) >> 6;
 110              		.loc 1 29 0
 111 008c 040093E5 		ldr	r0, [r3, #4]
 112 0090 0008A0E1 		mov	r0, r0, asl #16
  30:../firmware/adc.c **** }
 113              		.loc 1 30 0
 114 0094 200BA0E1 		mov	r0, r0, lsr #22
 115 0098 1EFF2FE1 		bx	lr
 116              	.L13:
 117              		.align	2
 118              	.L12:
 119 009c 004003E0 		.word	-536657920
 120              		.cfi_endproc
 121              	.LFE2:
 123              		.align	2
 124              		.global	adc_read_ch
 126              	adc_read_ch:
 127              	.LFB3:
  31:../firmware/adc.c **** 
  32:../firmware/adc.c **** uint16_t adc_read_ch(uint8_t ch)
  33:../firmware/adc.c **** {
 128              		.loc 1 33 0
 129              		.cfi_startproc
 130              		@ Function supports interworking.
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              	.LVL3:
 134 00a0 38402DE9 		stmfd	sp!, {r3, r4, r5, lr}
 135              	.LCFI0:
 136              		.cfi_def_cfa_offset 16
 137              		.cfi_offset 3, -16
 138              		.cfi_offset 4, -12
 139              		.cfi_offset 5, -8
 140              		.cfi_offset 14, -4
 141              		.loc 1 33 0
 142 00a4 0040A0E1 		mov	r4, r0
  34:../firmware/adc.c ****   unsigned irqs = disable_timer1_irq();  // save T1 interrupt status & ensure disabled
 143              		.loc 1 34 0
 144 00a8 FEFFFFEB 		bl	disable_timer1_irq
 145              	.LVL4:
 146 00ac 0050A0E1 		mov	r5, r0
 147              	.LVL5:
  35:../firmware/adc.c ****   uint16_t res;
  36:../firmware/adc.c **** 
  37:../firmware/adc.c ****   adc_set_channel(ch);
 148              		.loc 1 37 0
 149 00b0 0400A0E1 		mov	r0, r4
 150              	.LVL6:
 151 00b4 FEFFFFEB 		bl	adc_set_channel
 152              	.LVL7:
  38:../firmware/adc.c ****   pause(100);
 153              		.loc 1 38 0
 154 00b8 6400A0E3 		mov	r0, #100
 155 00bc FEFFFFEB 		bl	pause
 156              	.LVL8:
  39:../firmware/adc.c ****   res = adc_read();
 157              		.loc 1 39 0
 158 00c0 FEFFFFEB 		bl	adc_read
 159              	.LVL9:
 160 00c4 0040A0E1 		mov	r4, r0
 161              	.LVL10:
  40:../firmware/adc.c ****   restore_timer1_irq(irqs);
 162              		.loc 1 40 0
 163 00c8 0500A0E1 		mov	r0, r5
 164              	.LVL11:
 165 00cc FEFFFFEB 		bl	restore_timer1_irq
 166              	.LVL12:
  41:../firmware/adc.c ****   return res;
  42:../firmware/adc.c **** }
 167              		.loc 1 42 0
 168 00d0 0400A0E1 		mov	r0, r4
 169 00d4 3840BDE8 		ldmfd	sp!, {r3, r4, r5, lr}
 170 00d8 1EFF2FE1 		bx	lr
 171              		.cfi_endproc
 172              	.LFE3:
 174              	.Letext0:
 175              		.file 2 "c:/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 176              		.file 3 "../firmware/lpcPIN.h"
 177              		.file 4 "../firmware/lpcADC.h"
 178              		.file 5 "../firmware/sysTime.h"
 179              		.file 6 "../firmware/timerISR.h"
DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
C:\Users\ncmorand\AppData\Local\Temp\ccLwVWxH.s:16     .text:00000000 $a
C:\Users\ncmorand\AppData\Local\Temp\ccLwVWxH.s:19     .text:00000000 adc_init
C:\Users\ncmorand\AppData\Local\Temp\ccLwVWxH.s:45     .text:0000002c $d
C:\Users\ncmorand\AppData\Local\Temp\ccLwVWxH.s:50     .text:00000034 $a
C:\Users\ncmorand\AppData\Local\Temp\ccLwVWxH.s:53     .text:00000034 adc_set_channel
C:\Users\ncmorand\AppData\Local\Temp\ccLwVWxH.s:79     .text:00000058 $d
C:\Users\ncmorand\AppData\Local\Temp\ccLwVWxH.s:83     .text:0000005c $a
C:\Users\ncmorand\AppData\Local\Temp\ccLwVWxH.s:86     .text:0000005c adc_read
C:\Users\ncmorand\AppData\Local\Temp\ccLwVWxH.s:119    .text:0000009c $d
C:\Users\ncmorand\AppData\Local\Temp\ccLwVWxH.s:123    .text:000000a0 $a
C:\Users\ncmorand\AppData\Local\Temp\ccLwVWxH.s:126    .text:000000a0 adc_read_ch
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
disable_timer1_irq
pause
restore_timer1_irq
