   1              		.cpu arm7tdmi-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.startup,"ax",%progbits
  17              		.align	2
  18              		.global	main
  20              	main:
  21              	.LFB0:
  22              		.file 1 "main.c"
   1:main.c        **** #include "can.h"
   2:main.c        **** #include "hardware.h"
   3:main.c        **** #include "module.h"
   4:main.c        **** #include "registers.h"
   5:main.c        **** #include "robot.h"
   6:main.c        **** #include <stdint.h>
   7:main.c        **** 
   8:main.c        **** // Address of the motor module
   9:main.c        **** 
  10:main.c        **** int main(void) {
  23              		.loc 1 10 0
  24              		.cfi_startproc
  25              		@ Function supports interworking.
  26              		@ Volatile: function does not return.
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 08402DE9 		stmfd	sp!, {r3, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 3, -8
  33              		.cfi_offset 14, -4
  11:main.c        ****   hardware_init();
  34              		.loc 1 11 0
  35 0004 FEFFFFEB 		bl	hardware_init
  36              	.LVL0:
  12:main.c        ****   registers_init();
  37              		.loc 1 12 0
  38 0008 FEFFFFEB 		bl	registers_init
  39              	.LVL1:
  40              	.L2:
  13:main.c        ****   // Set head LED to visible for tracking (green=64)
  14:main.c        ****   // We'll let the PC control the exact color
  15:main.c        **** 
  16:main.c        ****   // Main loop - just keep the system running
  17:main.c        ****   while (1) {
  18:main.c        ****     // The head will receive color commands from the PC program
  19:main.c        ****     // No additional processing needed here
  20:main.c        ****     pause(TEN_MS);
  41              		.loc 1 20 0 discriminator 1
  42 000c 04009FE5 		ldr	r0, .L3
  43 0010 FEFFFFEB 		bl	pause
  44              	.LVL2:
  45 0014 FCFFFFEA 		b	.L2
  46              	.L4:
  47              		.align	2
  48              	.L3:
  49 0018 A0860100 		.word	100000
  50              		.cfi_endproc
  51              	.LFE0:
  53              		.text
  54              	.Letext0:
  55              		.file 2 "../firmware/hardware.h"
  56              		.file 3 "../firmware/registers.h"
  57              		.file 4 "c:/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
  58              		.file 5 "../firmware/sysTime.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ncmorand\AppData\Local\Temp\ccEG6Vjc.s:17     .text.startup:00000000 $a
C:\Users\ncmorand\AppData\Local\Temp\ccEG6Vjc.s:20     .text.startup:00000000 main
C:\Users\ncmorand\AppData\Local\Temp\ccEG6Vjc.s:49     .text.startup:00000018 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
hardware_init
registers_init
pause
