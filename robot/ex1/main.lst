   1              		.cpu arm7tdmi-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.startup,"ax",%progbits
  17              		.align	2
  18              		.global	main
  20              	main:
  21              	.LFB0:
  22              		.file 1 "main.c"
   1:main.c        **** #include <stdint.h>
   2:main.c        **** #include "hardware.h"
   3:main.c        **** #include "registers.h"
   4:main.c        **** 
   5:main.c        **** int main(void)
   6:main.c        **** {
  23              		.loc 1 6 0
  24              		.cfi_startproc
  25              		@ Function supports interworking.
  26              		@ args = 0, pretend = 0, frame = 0
  27              		@ frame_needed = 0, uses_anonymous_args = 0
  28 0000 38402DE9 		stmfd	sp!, {r3, r4, r5, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 16
  31              		.cfi_offset 3, -16
  32              		.cfi_offset 4, -12
  33              		.cfi_offset 5, -8
  34              		.cfi_offset 14, -4
   7:main.c        ****   int8_t i;
   8:main.c        **** 
   9:main.c        ****   hardware_init();
  35              		.loc 1 9 0
  36 0004 FEFFFFEB 		bl	hardware_init
  37              	.LVL0:
  10:main.c        ****   reg32_table[REG32_LED] = LED_MANUAL;  // manual LED control
  38              		.loc 1 10 0
  39 0008 10319FE5 		ldr	r3, .L18
  40 000c FF24A0E3 		mov	r2, #-16777216
  41 0010 002083E5 		str	r2, [r3, #0]
  42 0014 3F0000EA 		b	.L17
  43              	.LVL1:
  44              	.L3:
  11:main.c        **** 
  12:main.c        ****   while (1) {
  13:main.c        ****     for (i = 0; i < 127; i++) {
  14:main.c        ****       set_rgb(i, 0, 0);
  45              		.loc 1 14 0 discriminator 2
  46 0018 0010A0E3 		mov	r1, #0
  47 001c 0400A0E1 		mov	r0, r4
  48 0020 0120A0E1 		mov	r2, r1
  49 0024 FEFFFFEB 		bl	set_rgb
  50              	.LVL2:
  15:main.c        ****       pause(TEN_MS);
  51              		.loc 1 15 0 discriminator 2
  52 0028 F4009FE5 		ldr	r0, .L18+4
  53 002c FEFFFFEB 		bl	pause
  54              	.LVL3:
  13:main.c        ****     for (i = 0; i < 127; i++) {
  55              		.loc 1 13 0 discriminator 2
  56 0030 014084E2 		add	r4, r4, #1
  57              	.LVL4:
  58 0034 FF4004E2 		and	r4, r4, #255
  59              	.LVL5:
  60              	.L16:
  13:main.c        ****     for (i = 0; i < 127; i++) {
  61              		.loc 1 13 0 is_stmt 0 discriminator 1
  62 0038 7F0054E3 		cmp	r4, #127
  63 003c F5FFFF1A 		bne	.L3
  13:main.c        ****     for (i = 0; i < 127; i++) {
  64              		.loc 1 13 0
  65 0040 0040A0E3 		mov	r4, #0
  66              	.LVL6:
  67              	.L4:
  16:main.c        ****     }
  17:main.c        ****     for (i = 0; i < 127; i++) {
  18:main.c        ****       set_rgb(127, i, 0);
  68              		.loc 1 18 0 is_stmt 1 discriminator 2
  69 0044 0410A0E1 		mov	r1, r4
  70 0048 7F00A0E3 		mov	r0, #127
  71 004c 0020A0E3 		mov	r2, #0
  17:main.c        ****     for (i = 0; i < 127; i++) {
  72              		.loc 1 17 0 discriminator 2
  73 0050 014084E2 		add	r4, r4, #1
  74              		.loc 1 18 0 discriminator 2
  75 0054 FEFFFFEB 		bl	set_rgb
  76              	.LVL7:
  17:main.c        ****     for (i = 0; i < 127; i++) {
  77              		.loc 1 17 0 discriminator 2
  78 0058 FF4004E2 		and	r4, r4, #255
  19:main.c        ****       pause(TEN_MS);
  79              		.loc 1 19 0 discriminator 2
  80 005c C0009FE5 		ldr	r0, .L18+4
  81 0060 FEFFFFEB 		bl	pause
  82              	.LVL8:
  17:main.c        ****     for (i = 0; i < 127; i++) {
  83              		.loc 1 17 0 discriminator 2
  84 0064 7F0054E3 		cmp	r4, #127
  85 0068 F5FFFF1A 		bne	.L4
  17:main.c        ****     for (i = 0; i < 127; i++) {
  86              		.loc 1 17 0 is_stmt 0
  87 006c 0040A0E3 		mov	r4, #0
  88              	.LVL9:
  89              	.L5:
  20:main.c        ****     }
  21:main.c        ****     for (i = 0; i < 127; i++) {
  22:main.c        ****       set_rgb(127, 127, i);
  90              		.loc 1 22 0 is_stmt 1 discriminator 2
  91 0070 7F00A0E3 		mov	r0, #127
  92 0074 0010A0E1 		mov	r1, r0
  93 0078 0420A0E1 		mov	r2, r4
  21:main.c        ****     for (i = 0; i < 127; i++) {
  94              		.loc 1 21 0 discriminator 2
  95 007c 014084E2 		add	r4, r4, #1
  96              		.loc 1 22 0 discriminator 2
  97 0080 FEFFFFEB 		bl	set_rgb
  98              	.LVL10:
  21:main.c        ****     for (i = 0; i < 127; i++) {
  99              		.loc 1 21 0 discriminator 2
 100 0084 FF4004E2 		and	r4, r4, #255
  23:main.c        ****       pause(TEN_MS);
 101              		.loc 1 23 0 discriminator 2
 102 0088 94009FE5 		ldr	r0, .L18+4
 103 008c FEFFFFEB 		bl	pause
 104              	.LVL11:
  21:main.c        ****     for (i = 0; i < 127; i++) {
 105              		.loc 1 21 0 discriminator 2
 106 0090 7F0054E3 		cmp	r4, #127
 107 0094 F5FFFF1A 		bne	.L5
  21:main.c        ****     for (i = 0; i < 127; i++) {
 108              		.loc 1 21 0 is_stmt 0
 109 0098 0450A0E1 		mov	r5, r4
 110              	.LVL12:
 111              	.L6:
  24:main.c        ****     }
  25:main.c        ****     for (i = 127; i >= 0; i--) {
  26:main.c        ****       set_rgb(i, 127, 127);
 112              		.loc 1 26 0 is_stmt 1 discriminator 2
 113 009c 7F10A0E3 		mov	r1, #127
 114 00a0 0500A0E1 		mov	r0, r5
 115 00a4 0120A0E1 		mov	r2, r1
  25:main.c        ****     for (i = 127; i >= 0; i--) {
 116              		.loc 1 25 0 discriminator 2
 117 00a8 015045E2 		sub	r5, r5, #1
 118              		.loc 1 26 0 discriminator 2
 119 00ac FEFFFFEB 		bl	set_rgb
 120              	.LVL13:
  25:main.c        ****     for (i = 127; i >= 0; i--) {
 121              		.loc 1 25 0 discriminator 2
 122 00b0 FF5005E2 		and	r5, r5, #255
  27:main.c        ****       pause(TEN_MS);
 123              		.loc 1 27 0 discriminator 2
 124 00b4 68009FE5 		ldr	r0, .L18+4
 125 00b8 FEFFFFEB 		bl	pause
 126              	.LVL14:
  25:main.c        ****     for (i = 127; i >= 0; i--) {
 127              		.loc 1 25 0 discriminator 2
 128 00bc FF0055E3 		cmp	r5, #255
 129 00c0 F5FFFF1A 		bne	.L6
  25:main.c        ****     for (i = 127; i >= 0; i--) {
 130              		.loc 1 25 0 is_stmt 0
 131 00c4 0450A0E1 		mov	r5, r4
 132              	.LVL15:
 133              	.L7:
  28:main.c        ****     }
  29:main.c        ****     for (i = 127; i >= 0; i--) {
  30:main.c        ****       set_rgb(0, i, 127);
 134              		.loc 1 30 0 is_stmt 1 discriminator 2
 135 00c8 FF1005E2 		and	r1, r5, #255
 136 00cc 0000A0E3 		mov	r0, #0
 137 00d0 7F20A0E3 		mov	r2, #127
  29:main.c        ****     for (i = 127; i >= 0; i--) {
 138              		.loc 1 29 0 discriminator 2
 139 00d4 015045E2 		sub	r5, r5, #1
 140              		.loc 1 30 0 discriminator 2
 141 00d8 FEFFFFEB 		bl	set_rgb
 142              	.LVL16:
  29:main.c        ****     for (i = 127; i >= 0; i--) {
 143              		.loc 1 29 0 discriminator 2
 144 00dc FF5005E2 		and	r5, r5, #255
  31:main.c        ****       pause(TEN_MS);
 145              		.loc 1 31 0 discriminator 2
 146 00e0 3C009FE5 		ldr	r0, .L18+4
 147 00e4 FEFFFFEB 		bl	pause
 148              	.LVL17:
  29:main.c        ****     for (i = 127; i >= 0; i--) {
 149              		.loc 1 29 0 discriminator 2
 150 00e8 FF0055E3 		cmp	r5, #255
 151 00ec F5FFFF1A 		bne	.L7
 152              	.LVL18:
 153              	.L10:
  32:main.c        ****     }
  33:main.c        ****     for (i = 127; i >= 0; i--) {
  34:main.c        ****       set_rgb(0, 0, i);
 154              		.loc 1 34 0 discriminator 2
 155 00f0 0000A0E3 		mov	r0, #0
 156 00f4 0010A0E1 		mov	r1, r0
 157 00f8 0420A0E1 		mov	r2, r4
  33:main.c        ****     for (i = 127; i >= 0; i--) {
 158              		.loc 1 33 0 discriminator 2
 159 00fc 014044E2 		sub	r4, r4, #1
 160              		.loc 1 34 0 discriminator 2
 161 0100 FEFFFFEB 		bl	set_rgb
 162              	.LVL19:
  33:main.c        ****     for (i = 127; i >= 0; i--) {
 163              		.loc 1 33 0 discriminator 2
 164 0104 FF4004E2 		and	r4, r4, #255
  35:main.c        ****       pause(TEN_MS);
 165              		.loc 1 35 0 discriminator 2
 166 0108 14009FE5 		ldr	r0, .L18+4
 167 010c FEFFFFEB 		bl	pause
 168              	.LVL20:
  33:main.c        ****     for (i = 127; i >= 0; i--) {
 169              		.loc 1 33 0 discriminator 2
 170 0110 FF0054E3 		cmp	r4, #255
 171 0114 F5FFFF1A 		bne	.L10
 172              	.LVL21:
 173              	.L17:
  13:main.c        ****     for (i = 0; i < 127; i++) {
 174              		.loc 1 13 0
 175 0118 0040A0E3 		mov	r4, #0
 176 011c C5FFFFEA 		b	.L16
 177              	.L19:
 178              		.align	2
 179              	.L18:
 180 0120 00000000 		.word	reg32_table
 181 0124 A0860100 		.word	100000
 182              		.cfi_endproc
 183              	.LFE0:
 185              		.text
 186              	.Letext0:
 187              		.file 2 "c:/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 188              		.file 3 "../../common/regdefs.h"
 189              		.file 4 "../firmware/registers.h"
 190              		.file 5 "../firmware/hardware.h"
 191              		.file 6 "../firmware/sysTime.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ncmorand\AppData\Local\Temp\ccs0mh3D.s:17     .text.startup:00000000 $a
C:\Users\ncmorand\AppData\Local\Temp\ccs0mh3D.s:20     .text.startup:00000000 main
C:\Users\ncmorand\AppData\Local\Temp\ccs0mh3D.s:180    .text.startup:00000120 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
hardware_init
set_rgb
pause
reg32_table
